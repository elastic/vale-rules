name: Release Vale Package

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual triggering from GitHub Actions UI

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Extract version from tag
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=manual-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Vale package
        run: |
          # Create a complete package with .vale.ini and styles folder
          # This ensures everyone gets the same configuration
          
          # Add VERSION file to the Elastic style
          echo "${{ steps.get_version.outputs.VERSION }}" > styles/Elastic/VERSION
          
          # Create package directory structure
          mkdir -p elastic-vale
          cp .vale.ini elastic-vale/
          cp -r styles elastic-vale/
          
          # Create the zip file (name must match root directory for Vale to find it)
          zip -r elastic-vale.zip elastic-vale/
          
          # Verify the package contents
          echo "Package contents:"
          unzip -l elastic-vale.zip
          
      - name: Create release and upload asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Vale style guide package for Elastic documentation.
            
            This is a complete package containing the `.vale.ini` configuration file and the `Elastic` style with all style rules.
            
            ## Installation
            
            ### Option 1: Use as a package (recommended)
            
            Add the following to your project's `.vale.ini` file:
            
            ```ini
            Packages = https://github.com/elastic/vale-rules/releases/latest/download/elastic-vale.zip
            ```
            
            Then run:
            
            ```bash
            vale sync
            ```
            
            The Elastic configuration and styles will be automatically downloaded and merged with your local setup.
            
            ### Option 2: Manual installation
            
            1. Download and extract `elastic-vale.zip`
            2. Use the included `.vale.ini` as a reference or starting point for your configuration
            3. Copy the `styles/Elastic/` folder to your Vale `StylesPath`
            
            ### Option 3: Use installation scripts
            
            For global installation, use our platform-specific scripts from the repository.
          draft: false
          prerelease: false
          files: elastic-vale.zip
