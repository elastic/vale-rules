name: Vale Lint

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  vale-lint:
    name: Vale Lint / macOS
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper diff
          
      - name: Install Homebrew
        run: |
          if ! command -v brew &> /dev/null; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            # Add Homebrew to PATH for subsequent steps
            echo "/opt/homebrew/bin" >> $GITHUB_PATH
          else
            echo "Homebrew is already installed"
          fi
          
      - name: Run install script
        run: |
          chmod +x ./install-macos.sh
          ./install-macos.sh
          
      - name: Get changed files
        id: changed-files
        run: |
          # Get list of changed .md and .adoc files in this PR
          git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(md|adoc)$' > changed_files.txt || echo "No markdown/adoc files changed"
          
          if [ -s changed_files.txt ]; then
            echo "Found changed files:"
            cat changed_files.txt
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No markdown or adoc files changed in this PR"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Install reviewdog
        if: steps.changed-files.outputs.has_changes == 'true'
        run: |
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin
          
      - name: Run Vale with reviewdog
        if: steps.changed-files.outputs.has_changes == 'true'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -s changed_files.txt ]; then
            echo "Running Vale on changed files with reviewdog..."
            echo "Changed files:"
            cat changed_files.txt
            echo ""
            
            # Run Vale on all changed files and pipe to reviewdog
            # Use line format and process entire output (no filter-mode=added)
            while IFS= read -r file; do
              if [ -f "$file" ]; then
                echo "Processing: $file"
                vale --output=line "$file" 2>&1 || true
              fi
            done < changed_files.txt | \
            reviewdog -efm="%f:%l:%c:%m" -name="vale" -reporter=github-pr-review
            
            # Also show results in CI log for debugging
            echo ""
            echo "Vale results summary:"
            while IFS= read -r file; do
              if [ -f "$file" ]; then
                vale "$file" || true
              fi
            done < changed_files.txt
          else
            echo "No files to check"
          fi