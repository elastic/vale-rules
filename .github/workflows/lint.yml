name: Vale Lint with reviewdog

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  vale-lint:
    name: Vale Lint / macOS
    runs-on: macos-14
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper diff
          
      - name: Install Homebrew
        run: |
          if ! command -v brew &> /dev/null; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            # Add Homebrew to PATH for subsequent steps
            echo "/opt/homebrew/bin" >> $GITHUB_PATH
          else
            echo "Homebrew is already installed"
          fi
          
      - name: Run install script
        run: |
          chmod +x ./install-macos.sh
          ./install-macos.sh
          
      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
        env:
          # Prevent reviewdog from running help command during setup
          REVIEWDOG_SKIP_INSTALL_CHECK: true
          
      - name: Get changed files
        id: changed-files
        run: |
          # Get list of changed .md and .adoc files in this PR
          git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(md|adoc)$' > changed_files.txt || echo "No markdown/adoc files changed"
          
          if [ -s changed_files.txt ]; then
            echo "Found changed files:"
            cat changed_files.txt
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No markdown or adoc files changed in this PR"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Run Vale on changed files
        if: steps.changed-files.outputs.has_changes == 'true'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run Vale on changed files and pipe to reviewdog
          if [ -s changed_files.txt ]; then
            echo "Running Vale on changed files..."
            
            # First, let's see what Vale outputs
            echo "=== Vale output preview ==="
            while IFS= read -r file; do
              if [ -f "$file" ]; then
                echo "Checking file: $file"
                vale --output=line "$file" 2>&1 || true
              fi
            done < changed_files.txt > vale_output.txt
            
            echo "Vale found the following issues:"
            cat vale_output.txt
            
            # Now pipe to reviewdog with debugging
            if [ -s vale_output.txt ]; then
              echo "Sending to reviewdog..."
              cat vale_output.txt | \
              reviewdog -efm="%f:%l:%c:%m" -name="vale" -reporter=github-pr-review -filter-mode=added -log-level=debug
            else
              echo "No Vale issues found"
            fi
          else
            echo "No files to check"
          fi
          
      - name: Create GitHub Check Run
        if: steps.changed-files.outputs.has_changes == 'true'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a check run summary (different from inline comments)
          if [ -f vale_output.txt ] && [ -s vale_output.txt ]; then
            echo "Creating GitHub check run..."
            cat vale_output.txt | \
            reviewdog -efm="%f:%l:%c:%m" -name="vale-summary" -reporter=github-pr-check -log-level=debug
          else
            echo "No issues to report in check run"
          fi